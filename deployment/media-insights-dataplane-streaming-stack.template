AWSTemplateFormatVersion: 2010-09-09
Description: "Media Insights Engine - Analytics Streaming pipeline from the Dataplane DynamoDB Stream"

Parameters:
  KinesisShardCount:
    Type: Number
    Default: 1
  DynamoStreamArn:
    Type: String
    Description: "Arn of the Dataplane Dynamo DB Stream"
  DynamoTableArn:
    Type: String
    Description: "Arn of the Dataplane Dynamo DB table"

Mappings:
  SourceCode:
    General:
        S3Bucket: '%%BUCKET_NAME%%'
        KeyPrefix: "media_insights_engine/%%VERSION%%/code"
        TemplateKeyPrefix: "media_insights_engine/%%VERSION%%/cf"

Resources:
# kinesis data stream

  AnalyticsStream:
    Type: "AWS::Kinesis::Stream"
    Properties:
      ShardCount: !Ref KinesisShardCount
      StreamEncryption:
        EncryptionType: "KMS"
        KeyId: "alias/aws/kinesis"
      Tags:
        - Key: "environment"
          Value: "mie"

# ddb stream lambda

  DynamoDBStreamingFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      Handler: "stream.lambda_handler"
      Role: !GetAtt LambdaStreamRole.Arn
      TracingConfig:
          Mode: "PassThrough"
      Code:
        S3Bucket: !FindInMap ["SourceCode", "General", "S3Bucket"]
        S3Key:
          !Join [
            "/",
            [
              !FindInMap ["SourceCode", "General", "KeyPrefix"],
              "ddbstream.zip",
            ],
          ]
      Runtime: "python3.7"
      Environment:
        Variables:
          StreamName: !Ref AnalyticsStream
      Tags:
        - Key: "environment"
          Value: "mie"

# stream event mapping for lambda

  StreamingFunctionEventMapping:
    Type: "AWS::Lambda::EventSourceMapping"
    Properties:
      Enabled: true
      EventSourceArn: !Ref DynamoStreamArn
      FunctionName: !GetAtt DynamoDBStreamingFunction.Arn
      StartingPosition: "LATEST"

# iam stuff
  LambdaStreamRole:
    Type: "AWS::IAM::Role"
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: "The policy applies to all resources - can't be scoped to a specific resource"
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: !Sub "${AWS::StackName}-LambdaStreamAccessPolicy"
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - "kinesis:ListShards"
                  - "kinesis:DescribeStream"
                  - "kinesis:GetRecords"
                  - "kinesis:GetShardIterator"
                  - "kinesis:ListStreams"
                  - "kinesis:DescribeStreamSummary"
                  - "kinesis:PutRecord"
                  - "kinesis:PutRecords"
                Resource: !GetAtt AnalyticsStream.Arn
              - Effect: Allow
                Action:
                  - "dynamodb:DescribeStream"
                  - "dynamodb:GetRecords"
                  - "dynamodb:GetShardIterator"
                  - "dynamodb:ListStreams"
                Resource: !Ref DynamoStreamArn
              - Effect: Allow
                Action:
                  - "xray:PutTraceSegments"
                  - "xray:PutTelemetryRecords"
                Resource: "*"
              # TODO: Security - Scope this down
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "*"
      Tags:
        - Key: "environment"
          Value: "mie"

Outputs:
  analyticsStreamArn:
    Value: !GetAtt AnalyticsStream.Arn
