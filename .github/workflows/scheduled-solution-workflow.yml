name: scheduled-solution-workflow

on:
  schedule:
    - cron: '0 20 * * 0'
  workflow_dispatch:

jobs:

  undeploy-us-east-1:
    runs-on: ubuntu-latest
    env:
      REGION: 'us-east-1'
      MIE_STACK_NAME: 'miesol'
      TEMPLATE: 'https://solutions-reference.s3.amazonaws.com/aws-media-insights-engine/latest/media-insights-stack.template'
    steps:
      - name: Initialize AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.BUILD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.BUILD_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Remove old stack
        run: |
          aws cloudformation delete-stack --stack-name $MIE_STACK_NAME --region $REGION
          aws cloudformation wait stack-delete-complete --stack-name $MIE_STACK_NAME --region $REGION
      - name: Remove old stack buckets
        run: |
          aws s3 ls | awk '{print $3}' | grep ${MIE_STACK_NAME} | while read line; do aws s3api get-bucket-location --bucket $line --query 'LocationConstraint' --output text | grep $REGION | while read line2; do aws s3 rb s3://$line --force; done; done
  deploy-us-east-1:
    needs: undeploy-us-east-1
    runs-on: ubuntu-latest
    env:
      REGION: 'us-east-1'
      MIE_STACK_NAME: 'miesol'
      TEMPLATE: 'https://solutions-reference.s3.amazonaws.com/aws-media-insights-engine/latest/media-insights-stack.template'
    steps:
      - name: Check out master branch
        uses: actions/checkout@v2.3.4
        with:
          ref: master
      - name: Initialize AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.BUILD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.BUILD_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Deploy new stack
        run: |
          cd deployment
          aws cloudformation create-stack --stack-name $MIE_STACK_NAME --template-url $TEMPLATE --region $REGION --parameters ParameterKey=DeployTestResources,ParameterValue=true ParameterKey=EnableXrayTrace,ParameterValue=true ParameterKey=MaxConcurrentWorkflows,ParameterValue=10 ParameterKey=DeployAnalyticsPipeline,ParameterValue=true --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM CAPABILITY_AUTO_EXPAND --disable-rollback
          aws cloudformation wait stack-create-complete --stack-name $MIE_STACK_NAME
      - name: Deploy Failed
        if: ${{ failure() }}
        uses: nashmaniac/create-issue-action@v1.1
        with:
          title: Nightly test for MIE solution failed
          token: ${{secrets.GITHUB_TOKEN}}
          assignees: ianwow
          labels: bug
          body: Nightly test failed for latest MIE solution
  test-us-east-1:
    needs: deploy-us-east-1
    runs-on: ubuntu-latest
    env:
      MIE_REGION: 'us-east-1'
      MIE_STACK_NAME: 'miesol'
    steps:
      - name: Check out master branch
        uses: actions/checkout@v2.3.4
        with:
          ref: master
      - name: Initialize AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Run integ tests
        run: |
          cd $GITHUB_WORKSPACE
          cd test/integ
          ./run_integ.sh
      - name: Run E2E tests
        run: |
          cd $GITHUB_WORKSPACE
          cd test/e2e
          ./run_e2e.sh
      - name: Test Failed
        if: ${{ failure() }}
        uses: nashmaniac/create-issue-action@v1.1
        with:
          title: Nightly test for MIE solution failed
          token: ${{secrets.GITHUB_TOKEN}}
          assignees: ianwow
          labels: bug
          body: Nightly test failed for latest MIE solution
      - name: Remove stack
        run: |
          aws cloudformation delete-stack --stack-name $MIE_STACK_NAME --region $MIE_REGION
          aws cloudformation wait stack-delete-complete --stack-name $MIE_STACK_NAME --region $MIE_REGION
      - name: Remove stack buckets
        run: |
          aws s3 ls | awk '{print $3}' | grep ${MIE_STACK_NAME} | while read line; do aws s3api get-bucket-location --bucket $line --query 'LocationConstraint' --output text | grep $REGION | while read line2; do aws s3 rb s3://$line --force; done; done

  undeploy-us-east-2:
    needs: test-us-east-1
    runs-on: ubuntu-latest
    env:
      REGION: 'us-east-2'
      MIE_STACK_NAME: 'miesol'
      TEMPLATE: 'https://solutions-reference.s3.amazonaws.com/aws-media-insights-engine/latest/media-insights-stack.template'
    steps:
      - name: Initialize AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.BUILD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.BUILD_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: Remove old stack
        run: |
          aws cloudformation delete-stack --stack-name $MIE_STACK_NAME --region $REGION
          aws cloudformation wait stack-delete-complete --stack-name $MIE_STACK_NAME --region $REGION
      - name: Remove old stack buckets
        run: |
          aws s3 ls | awk '{print $3}' | grep ${MIE_STACK_NAME} | while read line; do aws s3api get-bucket-location --bucket $line --query 'LocationConstraint' --output text | grep $REGION | while read line2; do aws s3 rb s3://$line --force; done; done
  deploy-us-east-2:
    needs: undeploy-us-east-2
    runs-on: ubuntu-latest
    env:
      REGION: 'us-east-2'
      MIE_STACK_NAME: 'miesol'
      TEMPLATE: 'https://solutions-reference.s3.amazonaws.com/aws-media-insights-engine/latest/media-insights-stack.template'
    steps:
      - name: Check out master branch
        uses: actions/checkout@v2.3.4
        with:
          ref: master
      - name: Initialize AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.BUILD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.BUILD_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: Deploy new stack
        run: |
          cd deployment
          aws cloudformation create-stack --stack-name $MIE_STACK_NAME --template-url $TEMPLATE --region $REGION --parameters ParameterKey=DeployTestResources,ParameterValue=true ParameterKey=EnableXrayTrace,ParameterValue=true ParameterKey=MaxConcurrentWorkflows,ParameterValue=10 ParameterKey=DeployAnalyticsPipeline,ParameterValue=true --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM CAPABILITY_AUTO_EXPAND --disable-rollback
          aws cloudformation wait stack-create-complete --stack-name $MIE_STACK_NAME
      - name: Deploy Failed
        if: ${{ failure() }}
        uses: nashmaniac/create-issue-action@v1.1
        with:
          title: Nightly test for MIE solution failed
          token: ${{secrets.GITHUB_TOKEN}}
          assignees: ianwow
          labels: bug
          body: Nightly test failed for latest MIE solution
  test-us-east-2:
    needs: deploy-us-east-2
    runs-on: ubuntu-latest
    env:
      MIE_REGION: 'us-east-2'
      MIE_STACK_NAME: 'miesol'
    steps:
      - name: Check out master branch
        uses: actions/checkout@v2.3.4
        with:
          ref: master
      - name: Initialize AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: Run integ tests
        run: |
          cd $GITHUB_WORKSPACE
          cd test/integ
          ./run_integ.sh
      - name: Run E2E tests
        run: |
          cd $GITHUB_WORKSPACE
          cd test/e2e
          ./run_e2e.sh
      - name: Test Failed
        if: ${{ failure() }}
        uses: nashmaniac/create-issue-action@v1.1
        with:
          title: Nightly test for MIE solution failed
          token: ${{secrets.GITHUB_TOKEN}}
          assignees: ianwow
          labels: bug
          body: Nightly test failed for latest MIE solution
      - name: Remove stack
        run: |
          aws cloudformation delete-stack --stack-name $MIE_STACK_NAME --region $MIE_REGION
          aws cloudformation wait stack-delete-complete --stack-name $MIE_STACK_NAME --region $MIE_REGION
      - name: Remove stack buckets
        run: |
          aws s3 ls | awk '{print $3}' | grep ${MIE_STACK_NAME} | while read line; do aws s3api get-bucket-location --bucket $line --query 'LocationConstraint' --output text | grep $REGION | while read line2; do aws s3 rb s3://$line --force; done; done

  undeploy-us-west-2:
    needs: test-us-east-2
    runs-on: ubuntu-latest
    env:
      REGION: 'us-west-2'
      MIE_STACK_NAME: 'miesol'
      TEMPLATE: 'https://solutions-reference.s3.amazonaws.com/aws-media-insights-engine/latest/media-insights-stack.template'
    steps:
      - name: Initialize AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.BUILD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.BUILD_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
      - name: Remove old stack
        run: |
          aws cloudformation delete-stack --stack-name $MIE_STACK_NAME --region $REGION
          aws cloudformation wait stack-delete-complete --stack-name $MIE_STACK_NAME --region $REGION
      - name: Remove old stack buckets
        run: |
          aws s3 ls | awk '{print $3}' | grep ${MIE_STACK_NAME} | while read line; do aws s3api get-bucket-location --bucket $line --query 'LocationConstraint' --output text | grep $REGION | while read line2; do aws s3 rb s3://$line --force; done; done
  deploy-us-west-2:
    needs: undeploy-us-west-2
    runs-on: ubuntu-latest
    env:
      REGION: 'us-west-2'
      MIE_STACK_NAME: 'miesol'
      TEMPLATE: 'https://solutions-reference.s3.amazonaws.com/aws-media-insights-engine/latest/media-insights-stack.template'
    steps:
      - name: Check out master branch
        uses: actions/checkout@v2.3.4
        with:
          ref: master
      - name: Initialize AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.BUILD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.BUILD_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
      - name: Deploy new stack
        run: |
          cd deployment
          aws cloudformation create-stack --stack-name $MIE_STACK_NAME --template-url $TEMPLATE --region $REGION --parameters ParameterKey=DeployTestResources,ParameterValue=true ParameterKey=EnableXrayTrace,ParameterValue=true ParameterKey=MaxConcurrentWorkflows,ParameterValue=10 ParameterKey=DeployAnalyticsPipeline,ParameterValue=true --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM CAPABILITY_AUTO_EXPAND --disable-rollback
          aws cloudformation wait stack-create-complete --stack-name $MIE_STACK_NAME
      - name: Deploy Failed
        if: ${{ failure() }}
        uses: nashmaniac/create-issue-action@v1.1
        with:
          title: Nightly test for MIE solution failed
          token: ${{secrets.GITHUB_TOKEN}}
          assignees: ianwow
          labels: bug
          body: Nightly test failed for latest MIE solution
  test-us-west-2:
    needs: deploy-us-west-2
    runs-on: ubuntu-latest
    env:
      MIE_REGION: 'us-west-2'
      MIE_STACK_NAME: 'miesol'
    steps:
      - name: Check out master branch
        uses: actions/checkout@v2.3.4
        with:
          ref: master
      - name: Initialize AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
      - name: Run integ tests
        run: |
          cd $GITHUB_WORKSPACE
          cd test/integ
          ./run_integ.sh
      - name: Run E2E tests
        run: |
          cd $GITHUB_WORKSPACE
          cd test/e2e
          ./run_e2e.sh
      - name: Test Failed
        if: ${{ failure() }}
        uses: nashmaniac/create-issue-action@v1.1
        with:
          title: Nightly test for MIE solution failed
          token: ${{secrets.GITHUB_TOKEN}}
          assignees: ianwow
          labels: bug
          body: Nightly test failed for latest MIE solution
      - name: Remove stack
        run: |
          aws cloudformation delete-stack --stack-name $MIE_STACK_NAME --region $MIE_REGION
          aws cloudformation wait stack-delete-complete --stack-name $MIE_STACK_NAME --region $MIE_REGION
      - name: Remove stack buckets
        run: |
          aws s3 ls | awk '{print $3}' | grep ${MIE_STACK_NAME} | while read line; do aws s3api get-bucket-location --bucket $line --query 'LocationConstraint' --output text | grep $REGION | while read line2; do aws s3 rb s3://$line --force; done; done

  undeploy-ap-south-1:
    runs-on: ubuntu-latest
    env:
      REGION: 'ap-south-1'
      MIE_STACK_NAME: 'miesol'
      TEMPLATE: 'https://solutions-reference.s3.amazonaws.com/aws-media-insights-engine/latest/media-insights-stack.template'
    steps:
      - name: Initialize AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.BUILD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.BUILD_AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1
      - name: Remove old stack
        run: |
          aws cloudformation delete-stack --stack-name $MIE_STACK_NAME --region $REGION
          aws cloudformation wait stack-delete-complete --stack-name $MIE_STACK_NAME --region $REGION
      - name: Remove old stack buckets
        run: |
          aws s3 ls | awk '{print $3}' | grep ${MIE_STACK_NAME} | while read line; do aws s3api get-bucket-location --bucket $line --query 'LocationConstraint' --output text | grep $REGION | while read line2; do aws s3 rb s3://$line --force; done; done
  deploy-ap-south-1:
    needs: undeploy-ap-south-1
    runs-on: ubuntu-latest
    env:
      REGION: 'ap-south-1'
      MIE_STACK_NAME: 'miesol'
      TEMPLATE: 'https://solutions-reference.s3.amazonaws.com/aws-media-insights-engine/latest/media-insights-stack.template'
    steps:
      - name: Check out master branch
        uses: actions/checkout@v2.3.4
        with:
          ref: master
      - name: Initialize AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.BUILD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.BUILD_AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1
      - name: Deploy new stack
        run: |
          cd deployment
          aws cloudformation create-stack --stack-name $MIE_STACK_NAME --template-url $TEMPLATE --region $REGION --parameters ParameterKey=DeployTestResources,ParameterValue=true ParameterKey=EnableXrayTrace,ParameterValue=true ParameterKey=MaxConcurrentWorkflows,ParameterValue=10 ParameterKey=DeployAnalyticsPipeline,ParameterValue=true --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM CAPABILITY_AUTO_EXPAND --disable-rollback
          aws cloudformation wait stack-create-complete --stack-name $MIE_STACK_NAME
      - name: Deploy Failed
        if: ${{ failure() }}
        uses: nashmaniac/create-issue-action@v1.1
        with:
          title: Nightly test for MIE solution failed
          token: ${{secrets.GITHUB_TOKEN}}
          assignees: ianwow
          labels: bug
          body: Nightly test failed for latest MIE solution
  test-ap-south-1:
    needs: deploy-ap-south-1
    runs-on: ubuntu-latest
    env:
      MIE_REGION: 'ap-south-1'
      MIE_STACK_NAME: 'miesol'
    steps:
      - name: Check out master branch
        uses: actions/checkout@v2.3.4
        with:
          ref: master
      - name: Initialize AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1
      - name: Run integ tests
        run: |
          cd $GITHUB_WORKSPACE
          cd test/integ
          ./run_integ.sh
      - name: Run E2E tests
        run: |
          cd $GITHUB_WORKSPACE
          cd test/e2e
          ./run_e2e.sh
      - name: Test Failed
        if: ${{ failure() }}
        uses: nashmaniac/create-issue-action@v1.1
        with:
          title: Nightly test for MIE solution failed
          token: ${{secrets.GITHUB_TOKEN}}
          assignees: ianwow
          labels: bug
          body: Nightly test failed for latest MIE solution
      - name: Remove stack
        run: |
          aws cloudformation delete-stack --stack-name $MIE_STACK_NAME --region $MIE_REGION
          aws cloudformation wait stack-delete-complete --stack-name $MIE_STACK_NAME --region $MIE_REGION
      - name: Remove stack buckets
        run: |
          aws s3 ls | awk '{print $3}' | grep ${MIE_STACK_NAME} | while read line; do aws s3api get-bucket-location --bucket $line --query 'LocationConstraint' --output text | grep $REGION | while read line2; do aws s3 rb s3://$line --force; done; done

  undeploy-ap-northeast-1:
    needs: test-ap-south-1
    runs-on: ubuntu-latest
    env:
      REGION: 'ap-northeast-1'
      MIE_STACK_NAME: 'miesol'
      TEMPLATE: 'https://solutions-reference.s3.amazonaws.com/aws-media-insights-engine/latest/media-insights-stack.template'
    steps:
      - name: Initialize AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.BUILD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.BUILD_AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1
      - name: Remove old stack
        run: |
          aws cloudformation delete-stack --stack-name $MIE_STACK_NAME --region $REGION
          aws cloudformation wait stack-delete-complete --stack-name $MIE_STACK_NAME --region $REGION
      - name: Remove old stack buckets
        run: |
          aws s3 ls | awk '{print $3}' | grep ${MIE_STACK_NAME} | while read line; do aws s3api get-bucket-location --bucket $line --query 'LocationConstraint' --output text | grep $REGION | while read line2; do aws s3 rb s3://$line --force; done; done
  deploy-ap-northeast-1:
    needs: undeploy-ap-northeast-1
    runs-on: ubuntu-latest
    env:
      REGION: 'ap-northeast-1'
      MIE_STACK_NAME: 'miesol'
      TEMPLATE: 'https://solutions-reference.s3.amazonaws.com/aws-media-insights-engine/latest/media-insights-stack.template'
    steps:
      - name: Check out master branch
        uses: actions/checkout@v2.3.4
        with:
          ref: master
      - name: Initialize AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.BUILD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.BUILD_AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1
      - name: Deploy new stack
        run: |
          cd deployment
          aws cloudformation create-stack --stack-name $MIE_STACK_NAME --template-url $TEMPLATE --region $REGION --parameters ParameterKey=DeployTestResources,ParameterValue=true ParameterKey=EnableXrayTrace,ParameterValue=true ParameterKey=MaxConcurrentWorkflows,ParameterValue=10 ParameterKey=DeployAnalyticsPipeline,ParameterValue=true --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM CAPABILITY_AUTO_EXPAND --disable-rollback
          aws cloudformation wait stack-create-complete --stack-name $MIE_STACK_NAME
      - name: Deploy Failed
        if: ${{ failure() }}
        uses: nashmaniac/create-issue-action@v1.1
        with:
          title: Nightly test for MIE solution failed
          token: ${{secrets.GITHUB_TOKEN}}
          assignees: ianwow
          labels: bug
          body: Nightly test failed for latest MIE solution
  test-ap-northeast-1:
    needs: deploy-ap-northeast-1
    runs-on: ubuntu-latest
    env:
      MIE_REGION: 'ap-northeast-1'
      MIE_STACK_NAME: 'miesol'
    steps:
      - name: Check out master branch
        uses: actions/checkout@v2.3.4
        with:
          ref: master
      - name: Initialize AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1
      - name: Run integ tests
        run: |
          cd $GITHUB_WORKSPACE
          cd test/integ
          ./run_integ.sh
      - name: Run E2E tests
        run: |
          cd $GITHUB_WORKSPACE
          cd test/e2e
          ./run_e2e.sh
      - name: Test Failed
        if: ${{ failure() }}
        uses: nashmaniac/create-issue-action@v1.1
        with:
          title: Nightly test for MIE solution failed
          token: ${{secrets.GITHUB_TOKEN}}
          assignees: ianwow
          labels: bug
          body: Nightly test failed for latest MIE solution
      - name: Remove stack
        run: |
          aws cloudformation delete-stack --stack-name $MIE_STACK_NAME --region $MIE_REGION
          aws cloudformation wait stack-delete-complete --stack-name $MIE_STACK_NAME --region $MIE_REGION
      - name: Remove stack buckets
        run: |
          aws s3 ls | awk '{print $3}' | grep ${MIE_STACK_NAME} | while read line; do aws s3api get-bucket-location --bucket $line --query 'LocationConstraint' --output text | grep $REGION | while read line2; do aws s3 rb s3://$line --force; done; done

  undeploy-ap-northeast-2:
    needs: test-ap-northeast-1
    runs-on: ubuntu-latest
    env:
      REGION: 'ap-northeast-2'
      MIE_STACK_NAME: 'miesol'
      TEMPLATE: 'https://solutions-reference.s3.amazonaws.com/aws-media-insights-engine/latest/media-insights-stack.template'
    steps:
      - name: Initialize AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.BUILD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.BUILD_AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
      - name: Remove old stack
        run: |
          aws cloudformation delete-stack --stack-name $MIE_STACK_NAME --region $REGION
          aws cloudformation wait stack-delete-complete --stack-name $MIE_STACK_NAME --region $REGION
      - name: Remove old stack buckets
        run: |
          aws s3 ls | awk '{print $3}' | grep ${MIE_STACK_NAME} | while read line; do aws s3api get-bucket-location --bucket $line --query 'LocationConstraint' --output text | grep $REGION | while read line2; do aws s3 rb s3://$line --force; done; done
  deploy-ap-northeast-2:
    needs: undeploy-ap-northeast-2
    runs-on: ubuntu-latest
    env:
      REGION: 'ap-northeast-2'
      MIE_STACK_NAME: 'miesol'
      TEMPLATE: 'https://solutions-reference.s3.amazonaws.com/aws-media-insights-engine/latest/media-insights-stack.template'
    steps:
      - name: Check out master branch
        uses: actions/checkout@v2.3.4
        with:
          ref: master
      - name: Initialize AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.BUILD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.BUILD_AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
      - name: Deploy new stack
        run: |
          cd deployment
          aws cloudformation create-stack --stack-name $MIE_STACK_NAME --template-url $TEMPLATE --region $REGION --parameters ParameterKey=DeployTestResources,ParameterValue=true ParameterKey=EnableXrayTrace,ParameterValue=true ParameterKey=MaxConcurrentWorkflows,ParameterValue=10 ParameterKey=DeployAnalyticsPipeline,ParameterValue=true --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM CAPABILITY_AUTO_EXPAND --disable-rollback
          aws cloudformation wait stack-create-complete --stack-name $MIE_STACK_NAME
      - name: Deploy Failed
        if: ${{ failure() }}
        uses: nashmaniac/create-issue-action@v1.1
        with:
          title: Nightly test for MIE solution failed
          token: ${{secrets.GITHUB_TOKEN}}
          assignees: ianwow
          labels: bug
          body: Nightly test failed for latest MIE solution
  test-ap-northeast-2:
    needs: deploy-ap-northeast-2
    runs-on: ubuntu-latest
    env:
      MIE_REGION: 'ap-northeast-2'
      MIE_STACK_NAME: 'miesol'
    steps:
      - name: Check out master branch
        uses: actions/checkout@v2.3.4
        with:
          ref: master
      - name: Initialize AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
      - name: Run integ tests
        run: |
          cd $GITHUB_WORKSPACE
          cd test/integ
          ./run_integ.sh
      - name: Run E2E tests
        run: |
          cd $GITHUB_WORKSPACE
          cd test/e2e
          ./run_e2e.sh
      - name: Test Failed
        if: ${{ failure() }}
        uses: nashmaniac/create-issue-action@v1.1
        with:
          title: Nightly test for MIE solution failed
          token: ${{secrets.GITHUB_TOKEN}}
          assignees: ianwow
          labels: bug
          body: Nightly test failed for latest MIE solution
      - name: Remove stack
        run: |
          aws cloudformation delete-stack --stack-name $MIE_STACK_NAME --region $MIE_REGION
          aws cloudformation wait stack-delete-complete --stack-name $MIE_STACK_NAME --region $MIE_REGION
      - name: Remove stack buckets
        run: |
          aws s3 ls | awk '{print $3}' | grep ${MIE_STACK_NAME} | while read line; do aws s3api get-bucket-location --bucket $line --query 'LocationConstraint' --output text | grep $REGION | while read line2; do aws s3 rb s3://$line --force; done; done

  undeploy-ap-southeast-1:
    needs: test-ap-northeast-2
    runs-on: ubuntu-latest
    env:
      REGION: 'ap-southeast-1'
      MIE_STACK_NAME: 'miesol'
      TEMPLATE: 'https://solutions-reference.s3.amazonaws.com/aws-media-insights-engine/latest/media-insights-stack.template'
    steps:
      - name: Initialize AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.BUILD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.BUILD_AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1
      - name: Remove old stack
        run: |
          aws cloudformation delete-stack --stack-name $MIE_STACK_NAME --region $REGION
          aws cloudformation wait stack-delete-complete --stack-name $MIE_STACK_NAME --region $REGION
      - name: Remove old stack buckets
        run: |
          aws s3 ls | awk '{print $3}' | grep ${MIE_STACK_NAME} | while read line; do aws s3api get-bucket-location --bucket $line --query 'LocationConstraint' --output text | grep $REGION | while read line2; do aws s3 rb s3://$line --force; done; done
  deploy-ap-southeast-1:
    needs: undeploy-ap-southeast-1
    runs-on: ubuntu-latest
    env:
      REGION: 'ap-southeast-1'
      MIE_STACK_NAME: 'miesol'
      TEMPLATE: 'https://solutions-reference.s3.amazonaws.com/aws-media-insights-engine/latest/media-insights-stack.template'
    steps:
      - name: Check out master branch
        uses: actions/checkout@v2.3.4
        with:
          ref: master
      - name: Initialize AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.BUILD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.BUILD_AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1
      - name: Deploy new stack
        run: |
          cd deployment
          aws cloudformation create-stack --stack-name $MIE_STACK_NAME --template-url $TEMPLATE --region $REGION --parameters ParameterKey=DeployTestResources,ParameterValue=true ParameterKey=EnableXrayTrace,ParameterValue=true ParameterKey=MaxConcurrentWorkflows,ParameterValue=10 ParameterKey=DeployAnalyticsPipeline,ParameterValue=true --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM CAPABILITY_AUTO_EXPAND --disable-rollback
          aws cloudformation wait stack-create-complete --stack-name $MIE_STACK_NAME
      - name: Deploy Failed
        if: ${{ failure() }}
        uses: nashmaniac/create-issue-action@v1.1
        with:
          title: Nightly test for MIE solution failed
          token: ${{secrets.GITHUB_TOKEN}}
          assignees: ianwow
          labels: bug
          body: Nightly test failed for latest MIE solution
  test-ap-southeast-1:
    needs: deploy-ap-southeast-1
    runs-on: ubuntu-latest
    env:
      MIE_REGION: 'ap-southeast-1'
      MIE_STACK_NAME: 'miesol'
    steps:
      - name: Check out master branch
        uses: actions/checkout@v2.3.4
        with:
          ref: master
      - name: Initialize AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1
      - name: Run integ tests
        run: |
          cd $GITHUB_WORKSPACE
          cd test/integ
          ./run_integ.sh
      - name: Run E2E tests
        run: |
          cd $GITHUB_WORKSPACE
          cd test/e2e
          ./run_e2e.sh
      - name: Test Failed
        if: ${{ failure() }}
        uses: nashmaniac/create-issue-action@v1.1
        with:
          title: Nightly test for MIE solution failed
          token: ${{secrets.GITHUB_TOKEN}}
          assignees: ianwow
          labels: bug
          body: Nightly test failed for latest MIE solution
      - name: Remove stack
        run: |
          aws cloudformation delete-stack --stack-name $MIE_STACK_NAME --region $MIE_REGION
          aws cloudformation wait stack-delete-complete --stack-name $MIE_STACK_NAME --region $MIE_REGION
      - name: Remove stack buckets
        run: |
          aws s3 ls | awk '{print $3}' | grep ${MIE_STACK_NAME} | while read line; do aws s3api get-bucket-location --bucket $line --query 'LocationConstraint' --output text | grep $REGION | while read line2; do aws s3 rb s3://$line --force; done; done

  undeploy-ap-southeast-2:
    needs: test-ap-southeast-1
    runs-on: ubuntu-latest
    env:
      REGION: 'ap-southeast-2'
      MIE_STACK_NAME: 'miesol'
      TEMPLATE: 'https://solutions-reference.s3.amazonaws.com/aws-media-insights-engine/latest/media-insights-stack.template'
    steps:
      - name: Initialize AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.BUILD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.BUILD_AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2
      - name: Remove old stack
        run: |
          aws cloudformation delete-stack --stack-name $MIE_STACK_NAME --region $REGION
          aws cloudformation wait stack-delete-complete --stack-name $MIE_STACK_NAME --region $REGION
      - name: Remove old stack buckets
        run: |
          aws s3 ls | awk '{print $3}' | grep ${MIE_STACK_NAME} | while read line; do aws s3api get-bucket-location --bucket $line --query 'LocationConstraint' --output text | grep $REGION | while read line2; do aws s3 rb s3://$line --force; done; done
  deploy-ap-southeast-2:
    needs: undeploy-ap-southeast-2
    runs-on: ubuntu-latest
    env:
      REGION: 'ap-southeast-2'
      MIE_STACK_NAME: 'miesol'
      TEMPLATE: 'https://solutions-reference.s3.amazonaws.com/aws-media-insights-engine/latest/media-insights-stack.template'
    steps:
      - name: Check out master branch
        uses: actions/checkout@v2.3.4
        with:
          ref: master
      - name: Initialize AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.BUILD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.BUILD_AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2
      - name: Deploy new stack
        run: |
          cd deployment
          aws cloudformation create-stack --stack-name $MIE_STACK_NAME --template-url $TEMPLATE --region $REGION --parameters ParameterKey=DeployTestResources,ParameterValue=true ParameterKey=EnableXrayTrace,ParameterValue=true ParameterKey=MaxConcurrentWorkflows,ParameterValue=10 ParameterKey=DeployAnalyticsPipeline,ParameterValue=true --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM CAPABILITY_AUTO_EXPAND --disable-rollback
          aws cloudformation wait stack-create-complete --stack-name $MIE_STACK_NAME
      - name: Deploy Failed
        if: ${{ failure() }}
        uses: nashmaniac/create-issue-action@v1.1
        with:
          title: Nightly test for MIE solution failed
          token: ${{secrets.GITHUB_TOKEN}}
          assignees: ianwow
          labels: bug
          body: Nightly test failed for latest MIE solution
  test-ap-southeast-2:
    needs: deploy-ap-southeast-2
    runs-on: ubuntu-latest
    env:
      MIE_REGION: 'ap-southeast-2'
      MIE_STACK_NAME: 'miesol'
    steps:
      - name: Check out master branch
        uses: actions/checkout@v2.3.4
        with:
          ref: master
      - name: Initialize AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2
      - name: Run integ tests
        run: |
          cd $GITHUB_WORKSPACE
          cd test/integ
          ./run_integ.sh
      - name: Run E2E tests
        run: |
          cd $GITHUB_WORKSPACE
          cd test/e2e
          ./run_e2e.sh
      - name: Test Failed
        if: ${{ failure() }}
        uses: nashmaniac/create-issue-action@v1.1
        with:
          title: Nightly test for MIE solution failed
          token: ${{secrets.GITHUB_TOKEN}}
          assignees: ianwow
          labels: bug
          body: Nightly test failed for latest MIE solution
      - name: Remove stack
        run: |
          aws cloudformation delete-stack --stack-name $MIE_STACK_NAME --region $MIE_REGION
          aws cloudformation wait stack-delete-complete --stack-name $MIE_STACK_NAME --region $MIE_REGION
      - name: Remove stack buckets
        run: |
          aws s3 ls | awk '{print $3}' | grep ${MIE_STACK_NAME} | while read line; do aws s3api get-bucket-location --bucket $line --query 'LocationConstraint' --output text | grep $REGION | while read line2; do aws s3 rb s3://$line --force; done; done

  undeploy-eu-central-1:
    runs-on: ubuntu-latest
    env:
      REGION: 'eu-central-1'
      MIE_STACK_NAME: 'miesol'
      TEMPLATE: 'https://solutions-reference.s3.amazonaws.com/aws-media-insights-engine/latest/media-insights-stack.template'
    steps:
      - name: Initialize AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.BUILD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.BUILD_AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
      - name: Remove old stack
        run: |
          aws cloudformation delete-stack --stack-name $MIE_STACK_NAME --region $REGION
          aws cloudformation wait stack-delete-complete --stack-name $MIE_STACK_NAME --region $REGION
      - name: Remove old stack buckets
        run: |
          aws s3 ls | awk '{print $3}' | grep ${MIE_STACK_NAME} | while read line; do aws s3api get-bucket-location --bucket $line --query 'LocationConstraint' --output text | grep $REGION | while read line2; do aws s3 rb s3://$line --force; done; done
  deploy-eu-central-1:
    needs: undeploy-eu-central-1
    runs-on: ubuntu-latest
    env:
      REGION: 'eu-central-1'
      MIE_STACK_NAME: 'miesol'
      TEMPLATE: 'https://solutions-reference.s3.amazonaws.com/aws-media-insights-engine/latest/media-insights-stack.template'
    steps:
      - name: Check out master branch
        uses: actions/checkout@v2.3.4
        with:
          ref: master
      - name: Initialize AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.BUILD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.BUILD_AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
      - name: Deploy new stack
        run: |
          cd deployment
          aws cloudformation create-stack --stack-name $MIE_STACK_NAME --template-url $TEMPLATE --region $REGION --parameters ParameterKey=DeployTestResources,ParameterValue=true ParameterKey=EnableXrayTrace,ParameterValue=true ParameterKey=MaxConcurrentWorkflows,ParameterValue=10 ParameterKey=DeployAnalyticsPipeline,ParameterValue=true --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM CAPABILITY_AUTO_EXPAND --disable-rollback
          aws cloudformation wait stack-create-complete --stack-name $MIE_STACK_NAME
      - name: Deploy Failed
        if: ${{ failure() }}
        uses: nashmaniac/create-issue-action@v1.1
        with:
          title: Nightly test for MIE solution failed
          token: ${{secrets.GITHUB_TOKEN}}
          assignees: ianwow
          labels: bug
          body: Nightly test failed for latest MIE solution
  test-eu-central-1:
    needs: deploy-eu-central-1
    runs-on: ubuntu-latest
    env:
      MIE_REGION: 'eu-central-1'
      MIE_STACK_NAME: 'miesol'
    steps:
      - name: Check out master branch
        uses: actions/checkout@v2.3.4
        with:
          ref: master
      - name: Initialize AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
      - name: Run integ tests
        run: |
          cd $GITHUB_WORKSPACE
          cd test/integ
          ./run_integ.sh
      - name: Run E2E tests
        run: |
          cd $GITHUB_WORKSPACE
          cd test/e2e
          ./run_e2e.sh
      - name: Test Failed
        if: ${{ failure() }}
        uses: nashmaniac/create-issue-action@v1.1
        with:
          title: Nightly test for MIE solution failed
          token: ${{secrets.GITHUB_TOKEN}}
          assignees: ianwow
          labels: bug
          body: Nightly test failed for latest MIE solution
      - name: Remove stack
        run: |
          aws cloudformation delete-stack --stack-name $MIE_STACK_NAME --region $MIE_REGION
          aws cloudformation wait stack-delete-complete --stack-name $MIE_STACK_NAME --region $MIE_REGION
      - name: Remove stack buckets
        run: |
          aws s3 ls | awk '{print $3}' | grep ${MIE_STACK_NAME} | while read line; do aws s3api get-bucket-location --bucket $line --query 'LocationConstraint' --output text | grep $REGION | while read line2; do aws s3 rb s3://$line --force; done; done

  undeploy-eu-west-1:
    needs: test-eu-central-1
    runs-on: ubuntu-latest
    env:
      REGION: 'eu-west-1'
      MIE_STACK_NAME: 'miesol'
      TEMPLATE: 'https://solutions-reference.s3.amazonaws.com/aws-media-insights-engine/latest/media-insights-stack.template'
    steps:
      - name: Initialize AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.BUILD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.BUILD_AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
      - name: Remove old stack
        run: |
          aws cloudformation delete-stack --stack-name $MIE_STACK_NAME --region $REGION
          aws cloudformation wait stack-delete-complete --stack-name $MIE_STACK_NAME --region $REGION
      - name: Remove old stack buckets
        run: |
          aws s3 ls | awk '{print $3}' | grep ${MIE_STACK_NAME} | while read line; do aws s3api get-bucket-location --bucket $line --query 'LocationConstraint' --output text | grep $REGION | while read line2; do aws s3 rb s3://$line --force; done; done
  deploy-eu-west-1:
    needs: undeploy-eu-west-1
    runs-on: ubuntu-latest
    env:
      REGION: 'eu-west-1'
      MIE_STACK_NAME: 'miesol'
      TEMPLATE: 'https://solutions-reference.s3.amazonaws.com/aws-media-insights-engine/latest/media-insights-stack.template'
    steps:
      - name: Check out master branch
        uses: actions/checkout@v2.3.4
        with:
          ref: master
      - name: Initialize AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.BUILD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.BUILD_AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
      - name: Deploy new stack
        run: |
          cd deployment
          aws cloudformation create-stack --stack-name $MIE_STACK_NAME --template-url $TEMPLATE --region $REGION --parameters ParameterKey=DeployTestResources,ParameterValue=true ParameterKey=EnableXrayTrace,ParameterValue=true ParameterKey=MaxConcurrentWorkflows,ParameterValue=10 ParameterKey=DeployAnalyticsPipeline,ParameterValue=true --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM CAPABILITY_AUTO_EXPAND --disable-rollback
          aws cloudformation wait stack-create-complete --stack-name $MIE_STACK_NAME
      - name: Deploy Failed
        if: ${{ failure() }}
        uses: nashmaniac/create-issue-action@v1.1
        with:
          title: Nightly test for MIE solution failed
          token: ${{secrets.GITHUB_TOKEN}}
          assignees: ianwow
          labels: bug
          body: Nightly test failed for latest MIE solution
  test-eu-west-1:
    needs: deploy-eu-west-1
    runs-on: ubuntu-latest
    env:
      MIE_REGION: 'eu-west-1'
      MIE_STACK_NAME: 'miesol'
    steps:
      - name: Check out master branch
        uses: actions/checkout@v2.3.4
        with:
          ref: master
      - name: Initialize AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
      - name: Run integ tests
        run: |
          cd $GITHUB_WORKSPACE
          cd test/integ
          ./run_integ.sh
      - name: Run E2E tests
        run: |
          cd $GITHUB_WORKSPACE
          cd test/e2e
          ./run_e2e.sh
      - name: Test Failed
        if: ${{ failure() }}
        uses: nashmaniac/create-issue-action@v1.1
        with:
          title: Nightly test for MIE solution failed
          token: ${{secrets.GITHUB_TOKEN}}
          assignees: ianwow
          labels: bug
          body: Nightly test failed for latest MIE solution
      - name: Remove stack
        run: |
          aws cloudformation delete-stack --stack-name $MIE_STACK_NAME --region $MIE_REGION
          aws cloudformation wait stack-delete-complete --stack-name $MIE_STACK_NAME --region $MIE_REGION
      - name: Remove stack buckets
        run: |
          aws s3 ls | awk '{print $3}' | grep ${MIE_STACK_NAME} | while read line; do aws s3api get-bucket-location --bucket $line --query 'LocationConstraint' --output text | grep $REGION | while read line2; do aws s3 rb s3://$line --force; done; done

  undeploy-eu-west-2:
    needs: test-eu-west-1
    runs-on: ubuntu-latest
    env:
      REGION: 'eu-west-2'
      MIE_STACK_NAME: 'miesol'
      TEMPLATE: 'https://solutions-reference.s3.amazonaws.com/aws-media-insights-engine/latest/media-insights-stack.template'
    steps:
      - name: Initialize AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.BUILD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.BUILD_AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2
      - name: Remove old stack
        run: |
          aws cloudformation delete-stack --stack-name $MIE_STACK_NAME --region $REGION
          aws cloudformation wait stack-delete-complete --stack-name $MIE_STACK_NAME --region $REGION
      - name: Remove old stack buckets
        run: |
          aws s3 ls | awk '{print $3}' | grep ${MIE_STACK_NAME} | while read line; do aws s3api get-bucket-location --bucket $line --query 'LocationConstraint' --output text | grep $REGION | while read line2; do aws s3 rb s3://$line --force; done; done
  deploy-eu-west-2:
    needs: undeploy-eu-west-2
    runs-on: ubuntu-latest
    env:
      REGION: 'eu-west-2'
      MIE_STACK_NAME: 'miesol'
      TEMPLATE: 'https://solutions-reference.s3.amazonaws.com/aws-media-insights-engine/latest/media-insights-stack.template'
    steps:
      - name: Check out master branch
        uses: actions/checkout@v2.3.4
        with:
          ref: master
      - name: Initialize AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.BUILD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.BUILD_AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2
      - name: Deploy new stack
        run: |
          cd deployment
          aws cloudformation create-stack --stack-name $MIE_STACK_NAME --template-url $TEMPLATE --region $REGION --parameters ParameterKey=DeployTestResources,ParameterValue=true ParameterKey=EnableXrayTrace,ParameterValue=true ParameterKey=MaxConcurrentWorkflows,ParameterValue=10 ParameterKey=DeployAnalyticsPipeline,ParameterValue=true --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM CAPABILITY_AUTO_EXPAND --disable-rollback
          aws cloudformation wait stack-create-complete --stack-name $MIE_STACK_NAME
      - name: Deploy Failed
        if: ${{ failure() }}
        uses: nashmaniac/create-issue-action@v1.1
        with:
          title: Nightly test for MIE solution failed
          token: ${{secrets.GITHUB_TOKEN}}
          assignees: ianwow
          labels: bug
          body: Nightly test failed for latest MIE solution
  test-eu-west-2:
    needs: deploy-eu-west-2
    runs-on: ubuntu-latest
    env:
      MIE_REGION: 'eu-west-2'
      MIE_STACK_NAME: 'miesol'
    steps:
      - name: Check out master branch
        uses: actions/checkout@v2.3.4
        with:
          ref: master
      - name: Initialize AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2
      - name: Run integ tests
        run: |
          cd $GITHUB_WORKSPACE
          cd test/integ
          ./run_integ.sh
      - name: Run E2E tests
        run: |
          cd $GITHUB_WORKSPACE
          cd test/e2e
          ./run_e2e.sh
      - name: Test Failed
        if: ${{ failure() }}
        uses: nashmaniac/create-issue-action@v1.1
        with:
          title: Nightly test for MIE solution failed
          token: ${{secrets.GITHUB_TOKEN}}
          assignees: ianwow
          labels: bug
          body: Nightly test failed for latest MIE solution
      - name: Remove stack
        run: |
          aws cloudformation delete-stack --stack-name $MIE_STACK_NAME --region $MIE_REGION
          aws cloudformation wait stack-delete-complete --stack-name $MIE_STACK_NAME --region $MIE_REGION
      - name: Remove stack buckets
        run: |
          aws s3 ls | awk '{print $3}' | grep ${MIE_STACK_NAME} | while read line; do aws s3api get-bucket-location --bucket $line --query 'LocationConstraint' --output text | grep $REGION | while read line2; do aws s3 rb s3://$line --force; done; done
